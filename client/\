import { useRef } from "react"
import assets, { messagesDummyData } from "../assets/assets.js"
import { useEffect } from "react"
import { formateMsgTime } from "../lib/utils.js"

const ChatContainer = ({ selectedUser, SetSelectedUser }) => {

  const scrollEnd = useRef(null)

  useEffect(() => {
    if (scrollEnd.current) {
      scrollEnd.current.scrollIntoView({ behavior: 'smooth' })
    }
  }, [])



  return selectedUser ? (
    <div className="h-full overflow-scroll relative backdrop-blur-lg">
      <div className="flex items-center gap-3 py-3 mx-4 border-b border-stone-500">
        <img src={assets.profile_martin} alt="" className="w-10 rounded-full" />
        <p className="flex text-lg text-white flex-1 items-center gap-2">Martin Johson
          <span className="w-2 h-2 rounded-full bg-green-500"></span>
        </p>
        <img onClick={() => SetSelectedUser(null)} src={assets.arrow_icon} className="md:hidden max-w-7" alt="" />
        <img src={assets.help_icon} className="max-md:hidden max-w-5" alt="" />
      </div>
      {/* Chat messages will go here */}
      <div className="flex flex-col h-[calc(100%-120px)] overflow-x-hidden p-3 pb-6">
        {
          messagesDummyData.map((msg, index) => (
            <div key={index} className={`flex items-end gap-2 justify-end ${msg.senderId !== '680f50e4f10f3cd28382ecf9' && 'flex-row-reverse'}`}>
              {msg.image ? (
                <img src={msg.image} className="maz-w-[230-px] border border-green-700 rounded-lg overflow-hidden mb-8" alt="" />
              ) : (
                <p className={`p-2 max-w-[200px] md:text-sm font-light rounded-lg md-8 break-all bg-violet-500/30 text-white ${msg.senderId === '5680f50e4f10f3cd28382ecf9' ? 'rounded-br-none' : 'rounded-bl-none'}`}>{msg.text}</p>
              )}
              <div className="text-center text-xs">
                <img src={msg.senderId === '680f50e4f10f3cd28382ecf9' ? assets.avatar_icon : assets.profile_martin} className="w-7 rounded-full" alt="" />
                <p className="text-gray-500">{formateMsgTime(msg.createdAt)}</p>
              </div>
            </div>
          ))}
        <div ref={scrollEnd}></div>
      </div>
      <div className="absolute bottom-0 left-0 right-0 flex items-center gap-3 p-3">
        <div>
          <input type="text" placeholder="Send a messages" />
          <input type="file" name="" id="" />
        </div>
      </div>
    </div>
  ) :
    (
      <div className="flex flex-col items-center justify-center gap-2 text-gray-500 bg-white/10 max-md:hidden">
        <img src={assets.logo_icon} alt="" className=" max-w-16 " />
        <p className="font-medium text-white text-lg">Start Chating</p>
        <img src={assets.arrow_icon} className="max-md:hidden max-w-5" alt="" />
      </div>
    )
}

export default ChatContainer
